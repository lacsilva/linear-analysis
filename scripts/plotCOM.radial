#!/bin/csh
#
setenv tau 60000
setenv in plot.in 
setenv out rad.m3e04p01Rcc2200L100.Rc.tau$tau
rm $in 
#========================================================== 
#   input for lo
#========================================================== 
#
cat > $in << EOT
Symmetry = 2
Calculation = 4
VariablePar = Rt
Rt = 2155.45
tau = ${tau}.0
Pt = 0.1
eta = 0.4
Le = 50. 
Rc = 1000.
Truncation = 4
m0 = 3
AbsParameterError = 1.00E-06
RelativeGRError = 1.00E-04 
MaxIterations = 10
StepSize = 2000.0
UpperLimit = 50000.
EOT
#  
# Command
glo $in $out
rm $in

#* ------- Physical Parameters: ------
#* RA=RAYLEIGH NUMBER,  TAU=Coriolis NUMBER, PR=PRANTEL NUMBER,
#* ETA=RATIO OF RADII,  NT= TRUNCATION,  MODE=WAVE NUMBER,
#* pL = Lewis number,  Rconc=Rayleigh number due to concentration
#* 
#* NE= SYMMETRY PARAMETER, NE=0 : UNDEFINED SYMMETRY,
#* NE=2 : EQUATORIAL SYMMETRY, NE=1 : EQUATORIAL ANTISYMMETRY.
#* DRIFT C IS DEFINED as (phi-c*t).
#*
#* LCALC=0 : Critical Rayleigh number at fixed other parameters
#* LCALC=1 : All eigenvalues at fixed parameters including the Rayleigh number
#* LCALC=2 : Onset determined for constant wavenumber M 
#*           (by searching root of grothrate in R, using pegasus.f).
#* LCALC=3 : Onset determined by varying Rayleigh number R and wavenumber M.
#* LCALC=4 : Eigenvector determined for one set of parameters at onset.
#*           (Solution can be then plotted)
#*
#* LO.F calculates R (crit. Rayleighn.) and Omega (and M) in the
#* range TAU=TTA to TAU=TTF.


#  PLOTTING   ####################################################################

cat > larai <<EOT
|  INPUTFILE  |  OUTPUTFILE  | DATASETNR  | PLOTDRIFT |
 '$out'  'larao.DAT'    1   -138.0D0
|LTIM(-2..2)|LHEAD(01)|LNUM0123|LWRT|LGR(012)|LCL(01)|LFR|
       0        1         1       0    0       1       0
| NUMBER OF PLOTS | LATITUDE OF POLE | LONGITUDE OF POLE |
         1               20.E0              20.E0
| PLOT |  TIME  | NUMBER OF SUBPLOTS |
  'SP'    0.0E0             1
    | SUBPL | PLANE(RPT) | CONST | FIELD |(MAX RAD)/RO|ZD/STEP|PlotNR|
      'PL'       'R'        0.9    'VR'     1.E0          9    '000'
| NOUT 0=Ende, 1=TEK, 2=Plotter, 3=SYS_LASER, 4=NWII_LAS, 5=POSTSCR. |
1
EOT
#==========================================================
#     input for lara
#==========================================================
#! LHEAD=0: NHEAD, LHEAD=1: NHEAD WRITTEN,
#! LNUM: 0 no plotnumbers,  1 numbers with description,
#!       2 numbers without descr., 3 numbers by ABCNUMI
#! CFE determins the field to be plotted:
#! 'VS':STREAMFUNCTION OF VELOCITY        'BS':STREAMFUNCTION OF MAG. FIELD,
#! 'JS':STREAMFUNCTION OF EL. CURRENT,
#! 'VR':RADIAL VELOCITY U_R               'BR':RADIAL MAGNETIC FIELD,
#! 'TE':TEMPERATURE FIELD THETA,          'ZF':ZONAL FLOW ( MEAN VPHI ),
#! 'MF':MEAN MERID. FLOW (M=0,PHI=CONST), 'MT':MEAN TOR. MAG. FIELD, PHI=CONST,
#! 'BT':TOROIDAL MAG. FIELD FOR PHI=CONST,
#! 'MP':STREAMLINES OF MEAN POL. MAG. FIELD FOR PHI=CONST,
#! 'MJ':STREAMLINES OF MEAN ELECTRIC CURRENT FOR PHI=CONST,
#! 'MC':CONTOUR LINES OF MEAN PHI COMPONENT OF ELECTRIC CURRENT FOR PHI=CONST,
#! 'TT':Temperature field including basic state
#! 'UP':Contours of Uphi
#! 'NU':local nusselt number

# Command
/btpa/btpa19/SphericalLinearCode/DATA/NT=4/PLOTS.m3/lara < larai
rm larai
#
#========================================================
#  run IDL
#========================================================
cat > idl.batch <<EOF
.run /home/btpa/btpa19/LinearOnset/plots/IDLplots/idl_lara.pro
exit
EOF

cp idl.batch idl.x idl.y idl.z larao.DAT  /rz/home/btpa/btpa19/LinearOnset/plots/IDLplots
rm idl.batch idl.x idl.y idl.z larao.DAT 
ssh btrzx1 '(cd /home/btpa/btpa19/LinearOnset/plots/IDLplots; idl < idl.batch)'
mv /rz/home/btpa/btpa19/LinearOnset/plots/IDLplots/plot.ps $out.ps
cd /rz/home/btpa/btpa19/LinearOnset/plots/IDLplots 
rm idl.batch idl.x idl.y idl.z larao.DAT
cd -

